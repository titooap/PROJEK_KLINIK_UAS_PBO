/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package klinik_pbo;

import model.Pasien;
import dao.PasienDAO;
import controller.PasienController;
import java.awt.HeadlessException;
import model.Pasien;
import klinik_pbo.koneksi;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import java.sql.PreparedStatement;
import java.awt.Color;
import java.awt.Font;


/**
 *
 * @author avvjelly
 */
public class DaftarPasienAdmin extends javax.swing.JFrame {
    private void tampilkanDataPasien() {
        List<Pasien> daftar = PasienDAO.getAllPasien();
        DefaultTableModel model = (DefaultTableModel) TabelDaftarPasien.getModel();
        model.setRowCount(0); // Bersihkan isi tabel

        for (Pasien p : daftar) {
            Object[] row = {
                p.getIdPasien(),
                p.getNama(),
                p.getAlamat(),
                p.getTelepon()
            };
            model.addRow(row);
        }
    }

    /**
     * Creates new form DaftarPasienAdmin
     */
    public DaftarPasienAdmin() {
        initComponents();
        setLocationRelativeTo(null);
        tampilkanDataPasien();
        
        // Set the frame to be maximized
        setExtendedState(javax.swing.JFrame.MAXIMIZED_HORIZ);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanelUtamaDaftar = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TabelDaftarPasien = new javax.swing.JTable();
        LabelDaftarPasien = new javax.swing.JLabel();
        PanelSidebarAdmin2 = new javax.swing.JPanel();
        ButtonDashboard = new javax.swing.JButton();
        ButtonDashboard.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/dashboard.png"))); // ADD THIS LINE
        ButtonDaftarPasien = new javax.swing.JButton();
        ButtonDaftarPasien.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/daftar_pasien.png"))); // ADD THIS LINE
        ButtonDaftarDokter = new javax.swing.JButton();
        ButtonDaftarDokter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/daftar_dokter.png"))); // ADD THIS LINE
        ButtonDaftarObat = new javax.swing.JButton();
        ButtonDaftarObat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/daftar_obat.png"))); // ADD THIS LINE
        ButtonDaftarRuangan = new javax.swing.JButton();
        ButtonDaftarRuangan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/ruangan.png"))); // ADD THIS LINE
        ButtonPendaftaranPasien = new javax.swing.JButton();
        ButtonPendaftaranPasien.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/pendaftaran_pasien.png"))); // ADD THIS LINE
        ButtonPendaftaranDokter = new javax.swing.JButton();
        ButtonPendaftaranDokter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/pendaftaran_dokter.png"))); // ADD THIS LINE
        ButtonPendaftaranObat = new javax.swing.JButton();
        ButtonPendaftaranObat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/pendaftaran_obat.png"))); // ADD THIS LINE
        ButtonJadwalDokter = new javax.swing.JButton();
        ButtonJadwalDokter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/jadwal_dokter.png"))); // ADD THIS LINE
        ButtonResepPasien = new javax.swing.JButton();
        ButtonResepPasien.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/resep.png"))); // ADD THIS LINE
        ButtonLogout = new javax.swing.JButton();
        ButtonLogout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/logout.png"))); // ADD THIS LINE
        ButtonEditPasien = new javax.swing.JButton();
        ButtonDeletePasien = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Daftar Pasien - Sistem Informasi Klinik");

        PanelUtamaDaftar.setBackground(new java.awt.Color(240, 240, 240)); // Light grey background
        PanelUtamaDaftar.setPreferredSize(new java.awt.Dimension(1000, 700)); // Increased size for better layout

        TabelDaftarPasien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID Pasien", "Nama", "Alamat", "Telepon"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TabelDaftarPasien.setRowHeight(25); // Increased row height
        TabelDaftarPasien.getTableHeader().setFont(new Font("Franklin Gothic Medium", Font.BOLD, 12)); // Bold header
        TabelDaftarPasien.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION); // Only allow single row selection
        jScrollPane1.setViewportView(TabelDaftarPasien);
        if (TabelDaftarPasien.getColumnModel().getColumnCount() > 0) {
            TabelDaftarPasien.getColumnModel().getColumn(0).setPreferredWidth(80);
            TabelDaftarPasien.getColumnModel().getColumn(1).setPreferredWidth(150);
            TabelDaftarPasien.getColumnModel().getColumn(2).setPreferredWidth(200);
            TabelDaftarPasien.getColumnModel().getColumn(3).setPreferredWidth(100);
        }

        LabelDaftarPasien.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 30)); // Larger font
        LabelDaftarPasien.setForeground(new java.awt.Color(0, 51, 102)); // Dark blue text
        LabelDaftarPasien.setText("Daftar Pasien");

        PanelSidebarAdmin2.setBackground(new java.awt.Color(0, 51, 102)); // Dark blue
        PanelSidebarAdmin2.setPreferredSize(new java.awt.Dimension(220, 700)); // Wider sidebar

        ButtonDashboard.setBackground(new java.awt.Color(0, 51, 102));
        ButtonDashboard.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 14));
        ButtonDashboard.setForeground(new java.awt.Color(255, 255, 255));
        ButtonDashboard.setText("Dashboard");
        ButtonDashboard.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 15, 5, 15));
        ButtonDashboard.setFocusPainted(false);
        ButtonDashboard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonDashboardActionPerformed(evt);
            }
        });

        ButtonDaftarPasien.setBackground(new java.awt.Color(0, 102, 153)); // Highlighted for active page
        ButtonDaftarPasien.setFont(new java.awt.Font("Franklin Gothic Medium", 1, 15)); // Bold and larger
        ButtonDaftarPasien.setForeground(new java.awt.Color(255, 255, 255));
        ButtonDaftarPasien.setText("Daftar Pasien");
        ButtonDaftarPasien.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 15, 5, 15));
        ButtonDaftarPasien.setFocusPainted(false);

        ButtonDaftarDokter.setBackground(new java.awt.Color(0, 51, 102));
        ButtonDaftarDokter.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 14));
        ButtonDaftarDokter.setForeground(new java.awt.Color(255, 255, 255));
        ButtonDaftarDokter.setText("Daftar Dokter");
        ButtonDaftarDokter.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 15, 5, 15));
        ButtonDaftarDokter.setFocusPainted(false);
        ButtonDaftarDokter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonDaftarDokterActionPerformed(evt);
            }
        });

        ButtonDaftarObat.setBackground(new java.awt.Color(0, 51, 102));
        ButtonDaftarObat.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 14));
        ButtonDaftarObat.setForeground(new java.awt.Color(255, 255, 255));
        ButtonDaftarObat.setText("Daftar Obat");
        ButtonDaftarObat.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 15, 5, 15));
        ButtonDaftarObat.setFocusPainted(false);
        ButtonDaftarObat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonDaftarObatActionPerformed(evt);
            }
        });

        ButtonDaftarRuangan.setBackground(new java.awt.Color(0, 51, 102));
        ButtonDaftarRuangan.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 14));
        ButtonDaftarRuangan.setForeground(new java.awt.Color(255, 255, 255));
        ButtonDaftarRuangan.setText("Daftar Ruangan");
        ButtonDaftarRuangan.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 15, 5, 15));
        ButtonDaftarRuangan.setFocusPainted(false);
        ButtonDaftarRuangan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonDaftarRuanganActionPerformed(evt);
            }
        });

        ButtonPendaftaranPasien.setBackground(new java.awt.Color(0, 51, 102));
        ButtonPendaftaranPasien.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 14));
        ButtonPendaftaranPasien.setForeground(new java.awt.Color(255, 255, 255));
        ButtonPendaftaranPasien.setText("Pendaftaran Pasien");
        ButtonPendaftaranPasien.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 15, 5, 15));
        ButtonPendaftaranPasien.setFocusPainted(false);
        ButtonPendaftaranPasien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonPendaftaranPasienActionPerformed(evt);
            }
        });

        ButtonPendaftaranDokter.setBackground(new java.awt.Color(0, 51, 102));
        ButtonPendaftaranDokter.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 14));
        ButtonPendaftaranDokter.setForeground(new java.awt.Color(255, 255, 255));
        ButtonPendaftaranDokter.setText("Pendaftaran Dokter");
        ButtonPendaftaranDokter.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 15, 5, 15));
        ButtonPendaftaranDokter.setFocusPainted(false);
        ButtonPendaftaranDokter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonPendaftaranDokterActionPerformed(evt);
            }
        });

        ButtonPendaftaranObat.setBackground(new java.awt.Color(0, 51, 102));
        ButtonPendaftaranObat.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 14));
        ButtonPendaftaranObat.setForeground(new java.awt.Color(255, 255, 255));
        ButtonPendaftaranObat.setText("Pendaftaran Obat");
        ButtonPendaftaranObat.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 15, 5, 15));
        ButtonPendaftaranObat.setFocusPainted(false);
        ButtonPendaftaranObat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonPendaftaranObatActionPerformed(evt);
            }
        });

        ButtonJadwalDokter.setBackground(new java.awt.Color(0, 51, 102));
        ButtonJadwalDokter.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 14));
        ButtonJadwalDokter.setForeground(new java.awt.Color(255, 255, 255));
        ButtonJadwalDokter.setText("Jadwal Dokter");
        ButtonJadwalDokter.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 15, 5, 15));
        ButtonJadwalDokter.setFocusPainted(false);
        ButtonJadwalDokter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonJadwalDokterActionPerformed(evt);
            }
        });

        ButtonResepPasien.setBackground(new java.awt.Color(0, 51, 102));
        ButtonResepPasien.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 14));
        ButtonResepPasien.setForeground(new java.awt.Color(255, 255, 255));
        ButtonResepPasien.setText("Resep Pasien");
        ButtonResepPasien.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 15, 5, 15));
        ButtonResepPasien.setFocusPainted(false);
        ButtonResepPasien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonResepPasienActionPerformed(evt);
            }
        });

        ButtonLogout.setBackground(new java.awt.Color(204, 0, 0)); // Red for logout
        ButtonLogout.setFont(new java.awt.Font("Franklin Gothic Medium", 1, 14));
        ButtonLogout.setForeground(new java.awt.Color(255, 255, 255));
        ButtonLogout.setText("Logout");
        ButtonLogout.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 15, 5, 15));
        ButtonLogout.setFocusPainted(false);
        ButtonLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonLogoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelSidebarAdmin2Layout = new javax.swing.GroupLayout(PanelSidebarAdmin2);
        PanelSidebarAdmin2.setLayout(PanelSidebarAdmin2Layout);
        PanelSidebarAdmin2Layout.setHorizontalGroup(
            PanelSidebarAdmin2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelSidebarAdmin2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(PanelSidebarAdmin2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ButtonResepPasien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ButtonJadwalDokter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ButtonPendaftaranObat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ButtonPendaftaranDokter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ButtonPendaftaranPasien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ButtonDaftarRuangan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ButtonDaftarObat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ButtonDaftarDokter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ButtonDaftarPasien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ButtonDashboard, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                    .addComponent(ButtonLogout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        PanelSidebarAdmin2Layout.setVerticalGroup(
            PanelSidebarAdmin2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelSidebarAdmin2Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(ButtonDashboard, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(ButtonDaftarPasien, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ButtonDaftarDokter, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ButtonDaftarObat, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ButtonDaftarRuangan, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(ButtonPendaftaranPasien, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ButtonPendaftaranDokter, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ButtonPendaftaranObat, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ButtonJadwalDokter, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ButtonResepPasien, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, Short.MAX_VALUE) // Pushed logout to bottom
                .addComponent(ButtonLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        ButtonEditPasien.setBackground(new java.awt.Color(0, 153, 0)); // Green for Edit
        ButtonEditPasien.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 14)); // Larger font
        ButtonEditPasien.setForeground(new java.awt.Color(255, 255, 255));
        ButtonEditPasien.setText("Edit");
        ButtonEditPasien.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 15, 5, 15));
        ButtonEditPasien.setFocusPainted(false);
        ButtonEditPasien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonEditPasienActionPerformed(evt);
            }
        });

        ButtonDeletePasien.setBackground(new java.awt.Color(204, 0, 0)); // Red for Delete
        ButtonDeletePasien.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 14)); // Larger font
        ButtonDeletePasien.setForeground(new java.awt.Color(255, 255, 255));
        ButtonDeletePasien.setText("Delete");
        ButtonDeletePasien.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 15, 5, 15));
        ButtonDeletePasien.setFocusPainted(false);
        ButtonDeletePasien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonDeletePasienActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelUtamaDaftarLayout = new javax.swing.GroupLayout(PanelUtamaDaftar);
        PanelUtamaDaftar.setLayout(PanelUtamaDaftarLayout);
        PanelUtamaDaftarLayout.setHorizontalGroup(
            PanelUtamaDaftarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelUtamaDaftarLayout.createSequentialGroup()
                .addComponent(PanelSidebarAdmin2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(PanelUtamaDaftarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelUtamaDaftarLayout.createSequentialGroup()
                        .addComponent(LabelDaftarPasien)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ButtonEditPasien, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ButtonDeletePasien, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 720, Short.MAX_VALUE))
                .addGap(20, 20, 20))
        );
        PanelUtamaDaftarLayout.setVerticalGroup(
            PanelUtamaDaftarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelSidebarAdmin2, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
            .addGroup(PanelUtamaDaftarLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(PanelUtamaDaftarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelDaftarPasien)
                    .addComponent(ButtonEditPasien, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonDeletePasien, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(PanelUtamaDaftar, javax.swing.GroupLayout.DEFAULT_SIZE, 1000, Short.MAX_VALUE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(PanelUtamaDaftar, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ButtonDashboardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonDashboardActionPerformed
        // TODO add your handling code here:
        // 1. Tutup form saat ini 
        this.dispose();

        // 2. Buka form 
        DashboardAdmin dashboard = new DashboardAdmin();
        dashboard.setVisible(true);
    }//GEN-LAST:event_ButtonDashboardActionPerformed

    private void ButtonDaftarDokterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonDaftarDokterActionPerformed
        // TODO add your handling code here:
        // 1. Tutup form saat ini 
        this.dispose();

        // 2. Buka form 
        DaftarDokterAdmin daftardokter = new DaftarDokterAdmin();
        daftardokter.setVisible(true);
    }//GEN-LAST:event_ButtonDaftarDokterActionPerformed

    private void ButtonDaftarObatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonDaftarObatActionPerformed
        // TODO add your handling code here:
        // 1. Tutup form saat ini
        this.dispose();

        // 2. Buka form 
        DaftarObatAdmin daftarobat = new DaftarObatAdmin();
        daftarobat.setVisible(true);
    }//GEN-LAST:event_ButtonDaftarObatActionPerformed

    private void ButtonDaftarRuanganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonDaftarRuanganActionPerformed
        // TODO add your handling code here:
        // 1. Tutup form saat ini
        this.dispose();

        // 2. Buka form 
        DaftarRuanganAdmin daftarruangan = new DaftarRuanganAdmin();
        daftarruangan.setVisible(true);
    }//GEN-LAST:event_ButtonDaftarRuanganActionPerformed

    private void ButtonPendaftaranPasienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonPendaftaranPasienActionPerformed
        // TODO add your handling code here:
        // 1. Tutup form saat ini
        this.dispose();

        // 2. Buka form 
        PendaftaranPasienAdmin pendaftarpasien = new PendaftaranPasienAdmin();
        pendaftarpasien.setVisible(true);
    }//GEN-LAST:event_ButtonPendaftaranPasienActionPerformed

    private void ButtonPendaftaranDokterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonPendaftaranDokterActionPerformed
        // TODO add your handling code here:
        // 1. Tutup form saat ini
        this.dispose();

        // 2. Buka form
        PendaftaranDokterAdmin daftardokter = new PendaftaranDokterAdmin();
        daftardokter.setVisible(true);
    }//GEN-LAST:event_ButtonPendaftaranDokterActionPerformed

    private void ButtonPendaftaranObatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonPendaftaranObatActionPerformed
        // TODO add your handling code here:
        // 1. Tutup form saat ini
        this.dispose();

        // 2. Buka form
        PendaftaranObatAdmin daftarobat = new PendaftaranObatAdmin();
        daftarobat.setVisible(true);
    }//GEN-LAST:event_ButtonPendaftaranObatActionPerformed

    private void ButtonJadwalDokterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonJadwalDokterActionPerformed
        // TODO add your handling code here:
        // 1. Tutup form saat ini
        this.dispose();

        // 2. Buka form
        JadwalDokterAdmin daftarjadwal = new JadwalDokterAdmin();
        daftarjadwal.setVisible(true);
    }//GEN-LAST:event_ButtonJadwalDokterActionPerformed

    private void ButtonResepPasienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonResepPasienActionPerformed
        // TODO add your handling code here:
        // 1. Tutup form saat ini
        this.dispose();

        // 2. Buka form
        ResepPasienAdmin daftarresep = new ResepPasienAdmin();
        daftarresep.setVisible(true);
    }//GEN-LAST:event_ButtonResepPasienActionPerformed

    private void ButtonLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonLogoutActionPerformed
        // TODO add your handling code here:
        // Tampilkan dialog konfirmasi
        int pilihan = JOptionPane.showConfirmDialog(this,
                "Apakah Anda yakin ingin logout?",
                "Konfirmasi Logout",
                JOptionPane.YES_NO_OPTION);

        // Jika pengguna memilih "Yes"
        if (pilihan == JOptionPane.YES_OPTION) {
            // 1. Tutup form saat ini
            this.dispose();

            // 2. Buka form login
            Login login = new Login();
            login.setVisible(true);
        }
    }//GEN-LAST:event_ButtonLogoutActionPerformed

    private void ButtonDeletePasienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonDeletePasienActionPerformed
        // TODO add your handling code here:
        try {
            Connection conn = koneksi.getKoneksi();
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT idPasien, nama FROM pasien");

            JComboBox<String> comboBox = new JComboBox<>();
            Map<String, String> pasienMap = new HashMap<>();

            while (rs.next()) {
                String id = rs.getString("idPasien");
                String nama = rs.getString("nama");
                comboBox.addItem(nama);
                pasienMap.put(nama, id);
            }

            if (pasienMap.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Tidak ada pasien yang tersedia untuk dihapus.");
                stmt.close();
                conn.close();
                return;
            }

            int option = JOptionPane.showConfirmDialog(null, comboBox, "Pilih Pasien untuk Dihapus", JOptionPane.OK_CANCEL_OPTION);
            if (option == JOptionPane.OK_OPTION) {
                String namaDipilih = (String) comboBox.getSelectedItem();
                String idDipilih = pasienMap.get(namaDipilih);

                int konfirmasi = JOptionPane.showConfirmDialog(null, "Yakin ingin menghapus pasien \"" + namaDipilih + "\"?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
                if (konfirmasi == JOptionPane.YES_OPTION) {
                    try {
                        PasienDAO.deletePasien(idDipilih);
                        JOptionPane.showMessageDialog(null, "Pasien berhasil dihapus.");
                        tampilkanDataPasien(); // Refresh tabel
                    } catch (SQLException delErr) {
                        JOptionPane.showMessageDialog(null, 
                            "Gagal menghapus pasien: " + delErr.getMessage(), 
                            "Error", 
                            JOptionPane.ERROR_MESSAGE);
                    }
                }
            }

            stmt.close();
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Terjadi kesalahan: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_ButtonDeletePasienActionPerformed

    private void ButtonEditPasienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonEditPasienActionPerformed
        // TODO add your handling code here:
        try {
            Connection conn = koneksi.getKoneksi();
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT idPasien, nama FROM pasien");

            JComboBox<String> comboBox = new JComboBox<>();
            Map<String, String> pasienMap = new HashMap<>();

            while (rs.next()) {
                String id = rs.getString("idPasien");
                String nama = rs.getString("nama");
                comboBox.addItem(nama);
                pasienMap.put(nama, id);
            }

            if (pasienMap.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Tidak ada pasien yang tersedia untuk diedit.");
                return;
            }

            int option = JOptionPane.showConfirmDialog(null, comboBox, "Pilih Pasien untuk Diedit", JOptionPane.OK_CANCEL_OPTION);
            if (option == JOptionPane.OK_OPTION) {
                String namaDipilih = (String) comboBox.getSelectedItem();
                String idDipilih = pasienMap.get(namaDipilih);

                // Ambil data lengkap pasien
                PreparedStatement ps = conn.prepareStatement("SELECT * FROM pasien WHERE idPasien=?");
                ps.setString(1, idDipilih);
                ResultSet detail = ps.executeQuery();

                if (detail.next()) {
                    String nama = detail.getString("nama");
                    String alamat = detail.getString("alamat");
                    String telepon = detail.getString("telepon");

                    JTextField namaField = new JTextField(nama);
                    JTextField alamatField = new JTextField(alamat);
                    JTextField teleponField = new JTextField(telepon);

                    Object[] fields = {
                        "Nama:", namaField,
                        "Alamat:", alamatField,
                        "Telepon:", teleponField
                    };

                    int edit = JOptionPane.showConfirmDialog(null, fields, "Edit Data Pasien", JOptionPane.OK_CANCEL_OPTION);
                    if (edit == JOptionPane.OK_OPTION) {
                        Pasien p = new Pasien(
                                idDipilih,
                                namaField.getText(),
                                alamatField.getText(),
                                teleponField.getText()
                        );

                        PasienDAO.updatePasien(p);
                        JOptionPane.showMessageDialog(null, "Data pasien berhasil diperbarui.");
                        tampilkanDataPasien(); // refresh tabel
                    }
                }

                detail.close();
                ps.close();
            }

            stmt.close();
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Terjadi kesalahan: " + e.getMessage());
        }
    }//GEN-LAST:event_ButtonEditPasienActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DaftarPasienAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DaftarPasienAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DaftarPasienAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DaftarPasienAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DaftarPasienAdmin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonDaftarDokter;
    private javax.swing.JButton ButtonDaftarObat;
    private javax.swing.JButton ButtonDaftarPasien;
    private javax.swing.JButton ButtonDaftarRuangan;
    private javax.swing.JButton ButtonDashboard;
    private javax.swing.JButton ButtonDeletePasien;
    private javax.swing.JButton ButtonEditPasien;
    private javax.swing.JButton ButtonJadwalDokter;
    private javax.swing.JButton ButtonLogout;
    private javax.swing.JButton ButtonPendaftaranDokter;
    private javax.swing.JButton ButtonPendaftaranObat;
    private javax.swing.JButton ButtonPendaftaranPasien;
    private javax.swing.JButton ButtonResepPasien;
    private javax.swing.JLabel LabelDaftarPasien;
    private javax.swing.JPanel PanelSidebarAdmin2;
    private javax.swing.JPanel PanelUtamaDaftar;
    private javax.swing.JTable TabelDaftarPasien;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}