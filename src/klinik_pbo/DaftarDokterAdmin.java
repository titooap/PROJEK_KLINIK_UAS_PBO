/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package klinik_pbo;

import dao.DokterDAO;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import model.Dokter;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import java.sql.PreparedStatement;
import java.util.ArrayList;
import model.User;

/**
 *
 * @author avvjelly
 */
public class DaftarDokterAdmin extends javax.swing.JFrame {
    private void tampilkanDataDokter() {
    List<User> daftar = new ArrayList<>(DokterDAO.getAllDokter());
    DefaultTableModel model = (DefaultTableModel) TabelDaftarDokter.getModel();
    model.setRowCount(0); // Bersihkan isi tabel

    for (User u : daftar) {
        if (u instanceof Dokter d) {
            Object[] row = {
                d.getIdDokter(),
                d.getNama(),
                d.getSpesialisasi(),
                d.getIdUser()
            };
            model.addRow(row);
        }
    }
}




    /**
     * Creates new form DaftarDokterAdmin
     */
    public DaftarDokterAdmin() {
        initComponents();
        tampilkanDataDokter();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanelUtamaDaftarDokter = new javax.swing.JPanel();
        PanelSidebarAdmin2 = new javax.swing.JPanel();
        ButtonDashboard = new javax.swing.JButton();
        ButtonDaftarPasien = new javax.swing.JButton();
        ButtonDaftarDokter = new javax.swing.JButton();
        ButtonDaftarObat = new javax.swing.JButton();
        ButtonDaftarRuangan = new javax.swing.JButton();
        ButtonPendaftaranPasien = new javax.swing.JButton();
        ButtonPendaftaranDokter = new javax.swing.JButton();
        ButtonPendaftaranObat = new javax.swing.JButton();
        ButtonJadwalDokter = new javax.swing.JButton();
        ButtonResepPasien = new javax.swing.JButton();
        ButtonLogout = new javax.swing.JButton();
        LabelDaftarDokter = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TabelDaftarDokter = new javax.swing.JTable();
        ButtonEditDokter = new javax.swing.JButton();
        ButtonDeleteDokter = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        PanelUtamaDaftarDokter.setPreferredSize(new java.awt.Dimension(800, 500));

        PanelSidebarAdmin2.setBackground(new java.awt.Color(0, 51, 102));
        PanelSidebarAdmin2.setPreferredSize(new java.awt.Dimension(200, 500));

        ButtonDashboard.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 14)); // NOI18N
        ButtonDashboard.setText("Dashboard");
        ButtonDashboard.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ButtonDashboard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonDashboardActionPerformed(evt);
            }
        });

        ButtonDaftarPasien.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 14)); // NOI18N
        ButtonDaftarPasien.setText("Daftar Pasien");
        ButtonDaftarPasien.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ButtonDaftarPasien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonDaftarPasienActionPerformed(evt);
            }
        });

        ButtonDaftarDokter.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 14)); // NOI18N
        ButtonDaftarDokter.setText("Daftar Dokter");
        ButtonDaftarDokter.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        ButtonDaftarObat.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 14)); // NOI18N
        ButtonDaftarObat.setText("Daftar Obat");
        ButtonDaftarObat.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ButtonDaftarObat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonDaftarObatActionPerformed(evt);
            }
        });

        ButtonDaftarRuangan.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 14)); // NOI18N
        ButtonDaftarRuangan.setText("Daftar Ruangan");
        ButtonDaftarRuangan.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ButtonDaftarRuangan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonDaftarRuanganActionPerformed(evt);
            }
        });

        ButtonPendaftaranPasien.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 14)); // NOI18N
        ButtonPendaftaranPasien.setText("Pendaftaran Pasien");
        ButtonPendaftaranPasien.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ButtonPendaftaranPasien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonPendaftaranPasienActionPerformed(evt);
            }
        });

        ButtonPendaftaranDokter.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 14)); // NOI18N
        ButtonPendaftaranDokter.setText("Pendaftaran Dokter");
        ButtonPendaftaranDokter.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ButtonPendaftaranDokter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonPendaftaranDokterActionPerformed(evt);
            }
        });

        ButtonPendaftaranObat.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 14)); // NOI18N
        ButtonPendaftaranObat.setText("Pendaftaran Obat");
        ButtonPendaftaranObat.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ButtonPendaftaranObat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonPendaftaranObatActionPerformed(evt);
            }
        });

        ButtonJadwalDokter.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 14)); // NOI18N
        ButtonJadwalDokter.setText("Jadwal Dokter");
        ButtonJadwalDokter.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ButtonJadwalDokter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonJadwalDokterActionPerformed(evt);
            }
        });

        ButtonResepPasien.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 14)); // NOI18N
        ButtonResepPasien.setText("Resep Pasien");
        ButtonResepPasien.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ButtonResepPasien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonResepPasienActionPerformed(evt);
            }
        });

        ButtonLogout.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 14)); // NOI18N
        ButtonLogout.setText("Logout");
        ButtonLogout.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ButtonLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonLogoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelSidebarAdmin2Layout = new javax.swing.GroupLayout(PanelSidebarAdmin2);
        PanelSidebarAdmin2.setLayout(PanelSidebarAdmin2Layout);
        PanelSidebarAdmin2Layout.setHorizontalGroup(
            PanelSidebarAdmin2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelSidebarAdmin2Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(PanelSidebarAdmin2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ButtonDaftarPasien, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonDashboard, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonDaftarDokter, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonDaftarObat, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonDaftarRuangan, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonPendaftaranPasien, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonPendaftaranDokter, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonPendaftaranObat, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonJadwalDokter, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonResepPasien, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        PanelSidebarAdmin2Layout.setVerticalGroup(
            PanelSidebarAdmin2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelSidebarAdmin2Layout.createSequentialGroup()
                .addGap(162, 162, 162)
                .addComponent(ButtonDashboard)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ButtonDaftarPasien)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ButtonDaftarDokter)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ButtonDaftarObat)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ButtonDaftarRuangan)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ButtonPendaftaranPasien)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ButtonPendaftaranDokter)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ButtonPendaftaranObat)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ButtonJadwalDokter)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ButtonResepPasien)
                .addGap(34, 34, 34)
                .addComponent(ButtonLogout)
                .addContainerGap(1835, Short.MAX_VALUE))
        );

        LabelDaftarDokter.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 24)); // NOI18N
        LabelDaftarDokter.setText("Daftar Dokter");

        TabelDaftarDokter.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID Dokter", "Nama", "Spesialisasi"
            }
        ));
        jScrollPane1.setViewportView(TabelDaftarDokter);

        ButtonEditDokter.setBackground(new java.awt.Color(255, 153, 102));
        ButtonEditDokter.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 12)); // NOI18N
        ButtonEditDokter.setForeground(new java.awt.Color(255, 255, 255));
        ButtonEditDokter.setText("Edit");
        ButtonEditDokter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonEditDokterActionPerformed(evt);
            }
        });

        ButtonDeleteDokter.setBackground(new java.awt.Color(255, 51, 0));
        ButtonDeleteDokter.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 12)); // NOI18N
        ButtonDeleteDokter.setForeground(new java.awt.Color(255, 255, 255));
        ButtonDeleteDokter.setText("Delete");
        ButtonDeleteDokter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonDeleteDokterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelUtamaDaftarDokterLayout = new javax.swing.GroupLayout(PanelUtamaDaftarDokter);
        PanelUtamaDaftarDokter.setLayout(PanelUtamaDaftarDokterLayout);
        PanelUtamaDaftarDokterLayout.setHorizontalGroup(
            PanelUtamaDaftarDokterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelUtamaDaftarDokterLayout.createSequentialGroup()
                .addComponent(PanelSidebarAdmin2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(PanelUtamaDaftarDokterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelUtamaDaftarDokterLayout.createSequentialGroup()
                        .addComponent(ButtonEditDokter)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(LabelDaftarDokter)
                        .addGap(123, 123, 123)
                        .addComponent(ButtonDeleteDokter))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 576, Short.MAX_VALUE))
                .addContainerGap())
        );
        PanelUtamaDaftarDokterLayout.setVerticalGroup(
            PanelUtamaDaftarDokterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelUtamaDaftarDokterLayout.createSequentialGroup()
                .addComponent(PanelSidebarAdmin2, javax.swing.GroupLayout.PREFERRED_SIZE, 2327, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(PanelUtamaDaftarDokterLayout.createSequentialGroup()
                .addGroup(PanelUtamaDaftarDokterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelUtamaDaftarDokterLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(LabelDaftarDokter)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelUtamaDaftarDokterLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(PanelUtamaDaftarDokterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ButtonEditDokter)
                            .addComponent(ButtonDeleteDokter))
                        .addGap(3, 3, 3)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(PanelUtamaDaftarDokter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(PanelUtamaDaftarDokter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ButtonDashboardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonDashboardActionPerformed
        // TODO add your handling code here:
        // 1. Tutup form saat ini
        this.dispose();

        // 2. Buka form 
        DashboardAdmin dashboard = new DashboardAdmin();
        dashboard.setVisible(true);
    }//GEN-LAST:event_ButtonDashboardActionPerformed

    private void ButtonDaftarPasienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonDaftarPasienActionPerformed
        // TODO add your handling code here:
        // 1. Tutup form saat ini 
    this.dispose();
    
    // 2. Buka form 
    DaftarPasienAdmin daftarpasien = new DaftarPasienAdmin();
    daftarpasien.setVisible(true);
    }//GEN-LAST:event_ButtonDaftarPasienActionPerformed

    private void ButtonDaftarObatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonDaftarObatActionPerformed
        // TODO add your handling code here:
        // 1. Tutup form saat ini
    this.dispose();
    
    // 2. Buka form 
    DaftarObatAdmin daftarobat = new DaftarObatAdmin();
    daftarobat.setVisible(true);
    }//GEN-LAST:event_ButtonDaftarObatActionPerformed

    private void ButtonDaftarRuanganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonDaftarRuanganActionPerformed
        // TODO add your handling code here:
        // 1. Tutup form saat ini
    this.dispose();
    
    // 2. Buka form 
    DaftarRuanganAdmin daftarruangan = new DaftarRuanganAdmin();
    daftarruangan.setVisible(true);
    }//GEN-LAST:event_ButtonDaftarRuanganActionPerformed

    private void ButtonPendaftaranPasienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonPendaftaranPasienActionPerformed
        // TODO add your handling code here:
        // 1. Tutup form saat ini
    this.dispose();
    
    // 2. Buka form 
    PendaftaranPasienAdmin pendaftarpasien = new PendaftaranPasienAdmin();
    pendaftarpasien.setVisible(true);
    }//GEN-LAST:event_ButtonPendaftaranPasienActionPerformed

    private void ButtonPendaftaranDokterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonPendaftaranDokterActionPerformed
        // TODO add your handling code here:
        // 1. Tutup form saat ini
        this.dispose();

        // 2. Buka form
        PendaftaranDokterAdmin daftardokter = new PendaftaranDokterAdmin();
        daftardokter.setVisible(true);
    }//GEN-LAST:event_ButtonPendaftaranDokterActionPerformed

    private void ButtonPendaftaranObatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonPendaftaranObatActionPerformed
        // TODO add your handling code here:
        // 1. Tutup form saat ini
        this.dispose();

        // 2. Buka form
        PendaftaranObatAdmin daftarobat = new PendaftaranObatAdmin();
        daftarobat.setVisible(true);
    }//GEN-LAST:event_ButtonPendaftaranObatActionPerformed

    private void ButtonJadwalDokterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonJadwalDokterActionPerformed
        // TODO add your handling code here:
        // 1. Tutup form saat ini
        this.dispose();

        // 2. Buka form
        JadwalDokterAdmin daftarjadwal = new JadwalDokterAdmin();
        daftarjadwal.setVisible(true);
    }//GEN-LAST:event_ButtonJadwalDokterActionPerformed

    private void ButtonResepPasienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonResepPasienActionPerformed
        // TODO add your handling code here:
        // 1. Tutup form saat ini
        this.dispose();

        // 2. Buka form
        ResepPasienAdmin daftarresep = new ResepPasienAdmin();
        daftarresep.setVisible(true);
    }//GEN-LAST:event_ButtonResepPasienActionPerformed

    private void ButtonLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonLogoutActionPerformed
        // TODO add your handling code here:
        // Tampilkan dialog konfirmasi
    int pilihan = JOptionPane.showConfirmDialog(this, 
                    "Apakah Anda yakin ingin logout?", 
                    "Konfirmasi Logout", 
                    JOptionPane.YES_NO_OPTION);

    // Jika pengguna memilih "Yes"
    if (pilihan == JOptionPane.YES_OPTION) {
        // 1. Tutup form saat ini
        this.dispose();

        // 2. Buka form login
        Login login = new Login();
        login.setVisible(true);
      }
    }//GEN-LAST:event_ButtonLogoutActionPerformed

    private void ButtonDeleteDokterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonDeleteDokterActionPerformed
        // TODO add your handling code here:
           try {
            Connection conn = koneksi.getKoneksi();
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT idDokter, nama FROM dokter");

            JComboBox<String> comboBox = new JComboBox<>();
            Map<String, String> dokterMap = new HashMap<>();

            while (rs.next()) {
                String id = rs.getString("idDokter");
                String nama = rs.getString("nama");
                comboBox.addItem(nama);
                dokterMap.put(nama, id);
            }

            if (dokterMap.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Tidak ada dokter yang tersedia untuk dihapus.");
                return;
            }

            int option = JOptionPane.showConfirmDialog(null, comboBox, "Pilih Dokter untuk Dihapus", JOptionPane.OK_CANCEL_OPTION);
            if (option == JOptionPane.OK_OPTION) {
                String namaDipilih = (String) comboBox.getSelectedItem();
                String idDipilih = dokterMap.get(namaDipilih);

                int konfirmasi = JOptionPane.showConfirmDialog(null, "Yakin ingin menghapus dokter \"" + namaDipilih + "\"?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
                if (konfirmasi == JOptionPane.YES_OPTION) {
                    DokterDAO.deleteDokter(idDipilih);
                    JOptionPane.showMessageDialog(null, "Dokter berhasil dihapus.");
                    tampilkanDataDokter(); // ini yang akan refresh tabel
                }
            }

            stmt.close();
            conn.close();
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Terjadi kesalahan database: " + e.getMessage());
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Terjadi kesalahan umum: " + e.getMessage());
        }
    }//GEN-LAST:event_ButtonDeleteDokterActionPerformed

    private void ButtonEditDokterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonEditDokterActionPerformed
        // TODO add your handling code here:
                try {
            Connection conn = koneksi.getKoneksi();
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT idDokter, nama FROM dokter");

            JComboBox<String> comboBox = new JComboBox<>();
            Map<String, String> dokterMap = new HashMap<>();

            while (rs.next()) {
                String id = rs.getString("idDokter");
                String nama = rs.getString("nama");
                comboBox.addItem(nama);
                dokterMap.put(nama, id);
            }

            if (dokterMap.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Tidak ada dokter yang tersedia untuk diedit.");
                return;
            }

            int option = JOptionPane.showConfirmDialog(null, comboBox, "Pilih Dokter untuk Diedit", JOptionPane.OK_CANCEL_OPTION);
            if (option == JOptionPane.OK_OPTION) {
                String namaDipilih = (String) comboBox.getSelectedItem();
                String idDipilih = dokterMap.get(namaDipilih);

                PreparedStatement ps = conn.prepareStatement("SELECT * FROM dokter WHERE idDokter=?");
                ps.setString(1, idDipilih);
                ResultSet detail = ps.executeQuery();

                if (detail.next()) {
                    String nama = detail.getString("nama");
                    String spesialisasi = detail.getString("spesialisasi");
                    String idUserDipilih = detail.getString("idUser");

                    JTextField namaField = new JTextField(nama);
                    JTextField spesialisasiField = new JTextField(spesialisasi);
                    

                    Object[] fields = {
                        "Nama:", namaField,
                        "Spesialisasi:", spesialisasiField
                    };

                    int edit = JOptionPane.showConfirmDialog(null, fields, "Edit Data Dokter", JOptionPane.OK_CANCEL_OPTION);
                    if (edit == JOptionPane.OK_OPTION) {
                        Dokter d = new Dokter(idDipilih, namaField.getText(), spesialisasiField.getText(), idUserDipilih);
                        DokterDAO.updateDokter(d);
                        JOptionPane.showMessageDialog(null, "Data dokter berhasil diperbarui.");
                        tampilkanDataDokter(); // refresh tabel
                    }
                }

                detail.close();
                ps.close();
            }

            stmt.close();
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Terjadi kesalahan: " + e.getMessage());
        }

    }//GEN-LAST:event_ButtonEditDokterActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DaftarDokterAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DaftarDokterAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DaftarDokterAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DaftarDokterAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DaftarDokterAdmin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonDaftarDokter;
    private javax.swing.JButton ButtonDaftarObat;
    private javax.swing.JButton ButtonDaftarPasien;
    private javax.swing.JButton ButtonDaftarRuangan;
    private javax.swing.JButton ButtonDashboard;
    private javax.swing.JButton ButtonDeleteDokter;
    private javax.swing.JButton ButtonEditDokter;
    private javax.swing.JButton ButtonJadwalDokter;
    private javax.swing.JButton ButtonLogout;
    private javax.swing.JButton ButtonPendaftaranDokter;
    private javax.swing.JButton ButtonPendaftaranObat;
    private javax.swing.JButton ButtonPendaftaranPasien;
    private javax.swing.JButton ButtonResepPasien;
    private javax.swing.JLabel LabelDaftarDokter;
    private javax.swing.JPanel PanelSidebarAdmin2;
    private javax.swing.JPanel PanelUtamaDaftarDokter;
    private javax.swing.JTable TabelDaftarDokter;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
